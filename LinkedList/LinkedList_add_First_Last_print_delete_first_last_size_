import java.util.*;
public class LL {
    private int size;
    LL(){
        this.size = 0;
    }
    Node head;
    class Node{
        String data;
        Node next;

        Node (String data){
            this.data = data;
            this.next = null;
        }
    }
       public void addFirst(String data){ // add at first
        Node newNode = new Node(data);
        size++;
        if (head == null){
            head = newNode;
           return;
        }
        newNode.next = head;
        head = newNode;
        
       } 
       // add at last
       public void addlast(String data){
        Node newNode = new Node(data);
        size++;
        if (head == null){
           newNode =  head;
           newNode.next = null;
           return;
        }
        Node currNode = head;
        while(currNode.next != null){
            currNode = currNode.next;
        }
        currNode.next = newNode;
        
       }
    // print the linked list
    public void printLinkedlist(){       
       
        if (head == null){
            System.out.println("Linkedlist is empty");
            return;
        }
         Node currNode =  head;
        while (currNode != null){
            System.out.print(currNode.data + " -> ");
            currNode = currNode.next;
        }
        
        System.out.println("Null");
    }

    public void deleteFirst(){ // delete first element of the linkedlist
        if (head ==  null){
            System.out.println("list is Empty");
            return;
        }
        head = head.next;
        size--;
    }
    public void deleteLast(){
        if (head == null){
            System.out.println("List is empty");
            return;
        }
        size--;
        if(head.next == null){
            head = null;
            return;
        }
        Node secondNode = head;
        Node lastNode = head.next;
        while(lastNode.next != null){
            secondNode = lastNode; // secondNode = secondNode.next;
            lastNode = lastNode.next;
        }
        secondNode.next = null;
    }
    // return Size of linkedlist
    public int getSize(){
        return size;
    }
    public static void main(String [] args){ 
        LL list = new LL();
        // add : add First and add Last
        // remove / delete : remove First , removeLast
        // print linked list
        // find size of linked list
        list.addFirst("this");
        list.addlast("is");
        list.addlast("my");
        list.addlast("linked list");
        list.addlast("program");
        list.printLinkedlist();

        list.deleteFirst();
        list.printLinkedlist();
            
        list.deleteLast();
        list.printLinkedlist();

        System.out.println(list.getSize());
}
}
